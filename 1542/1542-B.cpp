#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
using ll = long long;

// 1 is in the set S
// if x is in S, then ax and x + b is also in S

// find the smallest number m in S such that n % b = m % b
// such number can only be generated by multiply a for multiple times over 1
// since a number plus b does not change its value modulo over b
void solve() {
    ll n, a, b;
    cin >> n >> a >> b;

    if (b == 1) {
        cout << "Yes" << endl;
        return;
    }

    ll remainder = n % b;
    if (a == 1) {
        if (remainder == 1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
        }
        return;
    }
    
    ll x = 1;
    while (x <= n) {
        if (x % b == remainder) {
            cout << "Yes" << endl;
            return;
        }
        x *= a;
    }

    cout << "No" << endl;
}

int main() {
    int t;
    cin >> t;
    while (t-- > 0) {
        solve();
    }
}